{"version":3,"file":"modal-stack.js","sourceRoot":"","sources":["../../src/modal/modal-stack.ts"],"names":[],"mappings":"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","sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  Injectable,\n  Injector,\n  Inject,\n  ReflectiveInjector,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  TemplateRef\n} from '@angular/core';\n\nimport {ContentRef} from '../util/popup';\nimport {isDefined, isString} from '../util/util';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\n\n@Injectable()\nexport class NgbModalStack {\n  private _backdropFactory: ComponentFactory<NgbModalBackdrop>;\n  private _windowFactory: ComponentFactory<NgbModalWindow>;\n  private _document: any;\n  private _windowAttributes = ['backdrop', 'keyboard', 'size', 'windowClass'];\n\n  constructor(\n      @Inject(DOCUMENT) document, private _applicationRef: ApplicationRef, private _injector: Injector,\n      private _componentFactoryResolver: ComponentFactoryResolver) {\n    this._document = document;\n  }\n\n  open(content: any, options): NgbModalRef {\n    this._buildFactories();\n    const containerEl =\n        isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef = this._getContentRef(options.injector || this._injector, content, activeModal);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    return ngbModalRef;\n  }\n\n  // Cant build factories on constructor when using lazy loading\n  private _buildFactories() {\n    this._buildBackdropFactory();\n    this._buildWindowFactory();\n  }\n\n  private _buildBackdropFactory() {\n    if (this._backdropFactory == null) {\n      this._backdropFactory = this._componentFactoryResolver.resolveComponentFactory(NgbModalBackdrop);\n    }\n  }\n\n  private _buildWindowFactory() {\n    if (this._windowFactory == null) {\n      this._windowFactory = this._windowFactory =\n          this._componentFactoryResolver.resolveComponentFactory(NgbModalWindow);\n    }\n  }\n\n  private _attachBackdrop(containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropCmptRef = this._backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(containerEl: any, contentRef: any): ComponentRef<NgbModalWindow> {\n    let windowCmptRef = this._windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(contentInjector: Injector, content: any, context: NgbActiveModal): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, context);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(contentInjector, content, context);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, context: NgbActiveModal): ContentRef {\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    this._document.body.appendChild(component);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(contentInjector: Injector, content: any, context: NgbActiveModal): ContentRef {\n    const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(content);\n    const modalContentInjector =\n        ReflectiveInjector.resolveAndCreate([{provide: NgbActiveModal, useValue: context}], contentInjector);\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    this._applicationRef.attachView(componentRef.hostView);\n    return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n  }\n}\n"]}